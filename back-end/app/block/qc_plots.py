from anndata import AnnData
from block.block_interface import Block
import codecs
import io
from matplotlib import pyplot as plt
import scanpy as sc


class QCPlots(Block):

    required_parameters = []

    def __init__(self):
        super().__init__()

    def validate_parameters(self, parameters: dict) -> None:
        super(QCPlots, self).validate_parameters(parameters)

    def run(self, adata: AnnData, dataset: str, parameters: dict) -> (AnnData, dict):
        self.validate_parameters(parameters)

        if dataset == "pbmc3k":
            adata.var["mt"] = adata.var_names.str.startswith("MT-")
            samples = ["1"]
        elif dataset == "pf_dogga":
            adata.var["mt"] = adata.var_names.str.contains("MIT")
            samples = ["0", "3", "5", "10a", "10b"]
        else:
            raise Exception("Selected dataset does not exist.")

        sc.pp.calculate_qc_metrics(adata, qc_vars=["mt"], percent_top=None, log1p=False, inplace=True)
        adata.obs["total_UMIs"] = adata.obs["total_counts"]
        adata.obs = adata.obs.drop("total_counts", axis=1)

        plt.rcParams["font.size"] = 18
        image_list = []
        for sample in samples:
            new_adata = adata[adata.obs["day"] == sample]
            sc.pl.violin(new_adata, ["n_genes_by_counts", "total_UMIs", "pct_counts_mt"], jitter=0.4, multi_panel=True, show=False)
            image_stream = io.BytesIO()
            plt.savefig(image_stream, format="png")
            image_stream.seek(0)
            image_list.append({
                "title": "Sample: " + sample,
                "image": str(codecs.encode(image_stream.read(), "base64")),
                "alttext": "A violin plot displaying quality control metrics generated by a QC Plots block"
            })
        
        message = {
            "image_list": image_list
        }
        return adata, message
